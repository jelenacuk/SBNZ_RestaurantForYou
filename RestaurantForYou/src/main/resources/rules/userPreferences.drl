package rules;
import com.sbnz.RestaurantForYou.dto.UserExpectationsDTO;
import com.sbnz.RestaurantForYou.model.*;


rule "Special occasion"
	salience 100
	agenda-group "requirments"
	when
		userExpectation: UserExpectationsDTO( occasion=="Special");
		restRequirements: RestaurantRrequirements();
	then
		modify(restRequirements){getAmbience().add(Ambience.CHEERFUL);};
end;

rule "Cheerful atmosphere"
	salience 90
	agenda-group "requirments"
	when
		restRequirements: RestaurantRrequirements( ambience contains Ambience.CHEERFUL);
	then
		modify(restRequirements){getFeatures().setLiveMusic(true)};
		modify(restRequirements){getFeatures().setAlcohol(true)};
		modify(restRequirements){getFeatures().setReservations(true)};
end;

rule "Special occasion with partner"
	salience 100
	agenda-group "requirments"
	when
		userExpectation: UserExpectationsDTO( occasion=="Special" && company == "Partner" );
		restRequirements: RestaurantRrequirements();
	then
		modify(restRequirements){getAmbience().add(Ambience.ROMANTIC);};
end;


rule "Special occasion with business partners"
	salience 100
	agenda-group "requirments"
	when
		userExpectation: UserExpectationsDTO( occasion=="Special" && company == "Colleagues" );
		restRequirements: RestaurantRrequirements();
	then
		modify(restRequirements){getAmbience().add(Ambience.LUXURIOUS);};
end;

rule "No occasion"
	salience 100
	agenda-group "requirments"
	when
		userExpectation: UserExpectationsDTO( occasion=="No occasion");
		restRequirements: RestaurantRrequirements();
	then
		modify(restRequirements){getAmbience().add(Ambience.RELAXED);};
end;

rule "The user goes alone or with friends for no particular reason"
	salience 100
	agenda-group "requirments"
	when
		userExpectation: UserExpectationsDTO(company == "Alone" || company == "Friends");
		restRequirements: RestaurantRrequirements();
	then
		modify(restRequirements){getAmbience().add(Ambience.RELAXED);};
end;

rule "Relaxed atmosphere"
	salience 90
	agenda-group "requirments"
	when
		restRequirements: RestaurantRrequirements( ambience contains Ambience.RELAXED);
	then
		modify(restRequirements){getFeatures().setWifi(true)};
		modify(restRequirements){getFeatures().setTv(true)};
end;

rule "Family lunch"
	salience 100
	agenda-group "requirments"
	when
		userExpectation: UserExpectationsDTO(company== "Family");
		restRequirements: RestaurantRrequirements();
	then
		modify(restRequirements){getFeatures().setProgramForChildern(true);};
end;


rule "Outdoor seating"
	salience 100
	agenda-group "requirments"
	when
		userExpectation: UserExpectationsDTO(weather=="spring" || weather == "summer");
		restRequirements: RestaurantRrequirements();
	then
		modify(restRequirements){getFeatures().setOutdoorSeating(true);};
end;


rule "The nearest restaurant if you go on foot"
	salience 100
	agenda-group "requirments"
	when
		userExpectation: UserExpectationsDTO(onFoot=="Yes" );
		restRequirements: RestaurantRrequirements();
	then
		modify(restRequirements){setNearest(true);};
end;

rule "Parking available if you have transportation"
	salience 100
	agenda-group "requirments"
	when
		userExpectation: UserExpectationsDTO(onFoot=="No" );
		restRequirements: RestaurantRrequirements();
	then
		modify(restRequirements){getFeatures().setParking(true);};
end;

rule "Needed space for more than four people"
	salience 100
	agenda-group "requirments"
	when
		userExpectation: UserExpectationsDTO( numOfPeople > 4 );
		restRequirements: RestaurantRrequirements();
	then
		modify(restRequirements){getCapacity().add(Capacity.LARGE);};
		modify(restRequirements){getCapacity().add(Capacity.MEDIUM);};
end;


rule "Price"
	salience 100
	agenda-group "requirments"
	when
		userExpectation: UserExpectationsDTO($price: price);
		restRequirements: RestaurantRrequirements();
	then
		modify(restRequirements){getPrice().add(Price.StringToEnum($price));};
end;

rule "Cuisine"
	salience 100
	agenda-group "requirments"
	when
		userExpectation: UserExpectationsDTO($kitchen: kitchen);
		restRequirements: RestaurantRrequirements();
	then
		System.out.println("PRVO OVO");
		modify(restRequirements){getKitchen().add(Kitchen.StringToEnum($kitchen));};
end;

rule "Music"
	salience 100
	agenda-group "requirments"
	when
		userExpectation: UserExpectationsDTO($music: music);
		restRequirements: RestaurantRrequirements();
	then
		modify(restRequirements){getMusic().add(Music.StringToEnum($music));};
end;